{"version":3,"sources":["components/Card.js","components/CardList.js","components/ErrorBoundary.js","components/CounterButton.js","components/Header.js","components/SearchBox.js","components/Scroll.js","components/MainPage.js","containers/App.js","actions.js","constants.js","registerServiceWorker.js","reducers.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","children","Component","CounterButton","updateCount","count","nextProps","nextState","color","onClick","Header","Fragment","components_CounterButton","SearchBox","searchChange","type","placeholder","onChange","aria-label","Scroll","style","overflow","border","height","MainPage","filterRobots","filter","robot","toLowerCase","includes","searchField","onRequestRobots","_this$props","isPending","onSearchChange","components_Header","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","App","src_components_MainPage","connect","searchRobotsReducer","requestRobotsReducer","dispatch","event","payload","target","value","fetch","then","response","contentType","headers","get","indexOf","json","console","log","Error","users","catch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialStateSearch","updateObject","oldObject","newValues","assign","initialStateRobots","rootReducer","combineReducers","arguments","length","undefined","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","origin","addEventListener","status","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8ea08afa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn (\r\n\t\t<div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user, i) => {\r\n          return (\r\n            <Card\r\n              key={i}\r\n              id={robots[i].id}\r\n              name={robots[i].name}\r\n              email={robots[i].email}\r\n              />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false,\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Error.</h1>\r\n        }\r\n        // Children will be the things between error boundary. Ie the cardlist.\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Component } from 'react';\r\n\r\nclass CounterButton extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            count: 0,\r\n        }\r\n    }\r\n\r\n    // Called before render(). Use cautiously, measure performance before using.\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        // console.log(\"NextProps\", nextProps);\r\n        // console.log(\"NextState\", nextState);\r\n        // Even though parent is being re-rendered, this would prevent this component from rerendering.\r\n        // Does essentially the same thing as extending PureComponent.\r\n        // Except it uses shallow comparison, so it can miss deep nested component updates.\r\n        if (this.state.count !== nextState.count) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    updateCount = () => {\r\n        this.setState(state => { \r\n            return { count: this.state.count + 1 }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <button color={this.props.color} onClick={this.updateCount} id='counter'>\r\n                Count: {this.state.count}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CounterButton;","import React, { Component } from 'react';\r\nimport CounterButton from './CounterButton';\r\n\r\nclass Header extends Component {\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return false;\r\n    // }\r\n\r\n    render() {\r\n        return(\r\n                <>   \r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <CounterButton color={'red'}/>\r\n                </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search robots'\r\n        onChange={searchChange}\r\n        aria-label='Search robots by name'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport Header from '../components/Header';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './MainPage.css';\r\n\r\nclass MainPage extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onRequestRobots();\r\n\t}\r\n\r\n    filterRobots = () => {\r\n        return this.props.robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(this.props.searchField.toLowerCase());\r\n\t\t})\r\n    }\r\n\r\n\trender() {\r\n\t\tconst { isPending, onSearchChange } = this.props;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<SearchBox searchChange={onSearchChange} />\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t{ isPending ? <h1>Loading...</h1> :\r\n\t\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t\t<CardList robots={this.filterRobots()} />\r\n\t\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport MainPage from '../components/MainPage';\r\nimport './App.css';\r\n\r\nimport { setSearchField, requestRobots } from '../actions'\r\n\r\n const mapStateToProps = state => ({\r\n\tsearchField: state.searchRobotsReducer.searchField,\r\n\r\n\trobots: state.requestRobotsReducer.robots,\r\n\terror: state.requestRobotsReducer.error,\r\n\tisPending: state.requestRobotsReducer.isPending,\r\n})\r\n\r\n const mapDispatchToProps = (dispatch) => {\r\n\treturn { \r\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n\t\tonRequestRobots: () => dispatch(requestRobots()),\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn <MainPage {...this.props}/>\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\r\n    CHANGE_SEARCH_FIELD, \r\n    REQUEST_ROBOTS_PENDING, \r\n    REQUEST_ROBOTS_SUCCESS, \r\n    REQUEST_ROBOTS_FAILED,\r\n} from './constants'\r\n\r\nexport const setSearchField = (text) => ({\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text,\r\n})\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n    dispatch({ type: REQUEST_ROBOTS_PENDING })\r\n    return fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => {\r\n            let contentType = response.headers.get(\"content-type\");\r\n            if (contentType && contentType.indexOf('application/json') !== -1) {\r\n                return response.json()\r\n            } else {\r\n                console.log(\"error..\")\r\n                throw new Error(\"Invalid JSON\");\r\n            }\r\n        })\r\n        .then(users => { dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: users })})\r\n        .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n    CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED,\r\n} from './constants'\r\n\r\nconst initialStateSearch = {\r\n    searchField: '',\r\n}\r\n\r\nfunction updateObject(oldObject, newValues) {\r\n    return Object.assign({}, oldObject, newValues);\r\n}\r\n\r\nexport const searchRobotsReducer = (state = initialStateSearch, action = {}) => {\r\n    switch(action.type){\r\n        case CHANGE_SEARCH_FIELD:\r\n            return updateObject(state, { searchField: action.payload })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStateRobots = {\r\n    robots: [],\r\n    isPending: false,\r\n    error: '',\r\n}\r\n\r\nexport const requestRobotsReducer = (state = initialStateRobots, action = {}) => {\r\n    switch(action.type) {\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return updateObject(state, { isPending: true })\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return updateObject(state, { robots: action.payload, isPending: false })\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return updateObject(state, { error: action.payload, isPending: false })\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\n//import { createLogger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'tachyons';\r\nimport { searchRobotsReducer, requestRobotsReducer } from './reducers';\r\n\r\n//const logger = createLogger();\r\n\r\nconst rootReducer = combineReducers({searchRobotsReducer, requestRobotsReducer});\r\n\r\nconst store = createStore(rootReducer, \r\n                applyMiddleware(thunkMiddleware));\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App/>\r\n                </Provider>,\r\n                document.getElementById('root'));\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}